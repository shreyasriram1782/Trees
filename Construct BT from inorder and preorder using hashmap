class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def build_tree(preorder, inorder):
    inorder_map = {val: idx for idx, val in enumerate(inorder)}
    preorder_index = [0]  # To keep track of the current index in the preorder traversal
    
    def helper(left, right):
        if left > right:
            return None
        
        root_val = preorder[preorder_index[0]]
        root = TreeNode(root_val)
        preorder_index[0] += 1
        
        root_index_inorder = inorder_map[root_val]

        root.left = helper(left, root_index_inorder - 1)
        root.right = helper(root_index_inorder + 1, right)
        
        return root
    
    return helper(0, len(inorder) - 1)

# Example
inorder = [9, 3, 15, 20, 7]
preorder = [3, 9, 20, 15, 7]

root = build_tree(preorder, inorder)

# You can now use the constructed tree as needed.
